####Part 1
What about your API/design is intended to be flexible?
	My API should allow the details of any kind of object to be set using the editor interface, as they are set 
	
How is your API/design encapsulating your implementation decisions?
My API hides my implementation decisions by setting internal data structures within classes to be private, and minimizing public methods across the developer interface.

How is your part linked to other parts of the project?
It saves data to xml files to be read by the gameplayer.
	
What exceptions (error cases) might occur in your part and how will you handle them (or not, by throwing)?
If the syntax script does not make sense to Groovy, an error message will be displayed.

Why do you think your API/design is good (also define what your measure of good is)?
It supports the creation of nearly any kind of class without needing additional code, so the creation of classes is kept extensible.

####Part 2
What feature/design problem are you most excited to work on?
	I’m excited to work on the scripting interface of our program because it’s an area I have not tried using before.
	
What feature/design problem are you most worried about working on?
I am worried about how to divide labor within the team. It seems to me that, depending on whether we get scripting to work or not, the people on the game engine should not have much to do.

What major feature do you plan to implement this weekend?
	This weekend, I plan to work with my partner on the developer side to allow for the population of a screenmodel with the required AttributeData instances. I also plan to allow AttributeData to be saved to a file.
	
Discuss the use cases/issues created for your pieces: are they descriptive, appropriate, and reasonably sized?
	I think the use cases I created for my part gave me a good idea of how I wanted to implement my front end. For example, detailing how an attribute could be constructed from smaller subattributes as one of my use cases helped guide me towards the current design of the class data.
	
Do you have use cases for errors that might occur?
	If the developer forgets to set an image for an imageholder and clicks save, an exception should be thrown.